@model BugTracker.Models.Ticket
@using BugTracker.Models.Enums
@using BugTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService
@inject IBTTicketHistoryService TicketHistoryService
@inject IBTFileService FileService

@{
    ViewData["Title"] = "Ticket Details";
    BTUser btUser = await UserManager.GetUserAsync(User);
    BTUser projectManager = await ProjectService.GetProjectManagerAsync(Model.ProjectId);
}


<h3 class="mt-2">Ticket Details</h3>
<div class="mb-4">
    @if (User.IsInRole(nameof(Roles.Admin)) || Model.DeveloperUserId == btUser.Id ||
    Model.OwnerUserId == btUser.Id ||
    await ProjectService.IsAssignedProjectManagerAsync(btUser.Id, Model.ProjectId))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id"><i class="far fa-edit"></i></a>
        <text> | </text>
    }

    @if (User.IsInRole(nameof(Roles.Admin)) || await ProjectService.IsAssignedProjectManagerAsync(btUser.Id, Model.ProjectId))
    {
        if (Model.Archived)
        {
            <a class="text-success" asp-action="Restore" asp-route-id="@Model.Id"><i class="far fa-trash-alt"></i></a>
        }
        else
        {
            <a asp-action="Archive" asp-route-id="@Model.Id"><i class="far fa-trash-alt"></i></a>
        }
    }
</div>

@if (!string.IsNullOrEmpty(Model.DeveloperUserId))
{
    <a href="">
        @if (Model.DeveloperUser?.AvatarFileData != null)
        {
            <img class="media-object" src="data:image/*;base64,@(Convert.ToBase64String(btUser.AvatarFileData))" alt="" />
        }
        else
        {
            <img class="media-object" style="width:60px;height:60px;" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" />
        }
    </a>

    <span class="text-muted" style="font-size:x-small;">Developer: <strong>@Model.DeveloperUser?.FullName</strong></span>
}

<div class="row mt-2">
    <div class="col-12 col-md-8">
        <!-- Details -->
        <div class="row">
            <div class="col">
                <div class="card col shadow">
                    <div class="card-header">
                        <i class="fas fa-info-circle text-secondary"></i>
                        <strong>@Model.Title</strong>
                    </div>
                    <div class="card-body px-2" style="overflow-y:auto;max-height:300px;">
                        <p>@Model.Description</p>
                        <div class="progress-container progress-info m-b-25">
                            @*Project Name and information*@
                            <strong class="progress-badge" style="font-size:small">Project: </strong><a style="text-decoration:none" asp-controller="Projects" asp-action="Details" asp-route-id="@Model.ProjectId">@Model.Project.Name</a>
                            <br />
                            <strong class="progress-badge" style="font-size:small">Developer: </strong>
                            @if (Model.DeveloperUserId != null)
                            {
                                <span>@Model.DeveloperUser?.FullName</span>
                            }
                            else
                            {
                                if (User.IsInRole(nameof(Roles.Admin)) || User.IsInRole(nameof(Roles.ProjectManager)))
                                {
                                    <a class="badge bg-info text-white" style="text-decoration:none" asp-action="AssignDeveloper" asp-controller="Tickets" asp-route-id="@Model.Id">Assign Developer</a>
                                }

                            }
                            <br />

                            <div class="progress mt-2">
                                @*Progress bar logic*@
                                @{
                                    var start = Model.Project.StartDate.DateTime;
                                    var end = Model.Project.EndDate.DateTime;
                                    var today = DateTime.Now;
                                    var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                                }
                                @*Variable from razor logic*@
                                <div class="progress-bar" role="progressbar" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                                    @*Variable from razor logic*@
                                    <span class="progress-value">@percent%</span>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <ul class="list-unstyled">
                            @*Ticket date*@
                            <li><strong>Date Entered:</strong> <span class="">  @Model.Created.ToString("dd MMM, yyyy")</</span></li>
                            @*Project end date*@
                            <li><strong>Deadline:</strong> <span class="">  @Model.Project.EndDate.ToString("dd MMM, yyyy")</</span></li>
                            @*Ticket type*@
                            <li><strong>Type:</strong> <span class="">  @Model.TicketType.Name</span></li>
                            @*Ticket priority*@
                            <li><strong>Priority:</strong> <span class="">  @Model.TicketPriority.Name</span></li>
                            @*Ticket status*@
                            <li><strong>Status:</strong> <span class="">  @Model.TicketStatus.Name</span></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- Comments -->
        <div class="">
            <div class="col mt-4">
                <div class="card col shadow">
                    <div class="card-header">
                        <i class="far fa-comments text-secondary"></i>
                        <strong>Comments</strong>
                    </div>
                    <div class="card-body" style="overflow-y:auto;max-height:300px;">
                        <ul class="right_chat list-unstyled mb-0">
                            @*Loop to show comments made for the Ticket*@
                            @if (Model.Comments.Count == 0)
                            {
                                <p class="text-secondary">&nbsp;No Comments</p>
                            }
                            @foreach (TicketComment comment in Model.Comments.Reverse())
                            {
                                <li class="online mb-4">
                                    <div class="media px-2">
                                        <!--TODO - Add link to user-->
                                    <a href="javascript:void(0);">
                                            @if (btUser?.AvatarFileData != null)
                                            {
                                                <img class="media-object" src="data:image/*;base64,@(Convert.ToBase64String(btUser.AvatarFileData))" alt="" />
                                            }
                                            else
                                            {
                                                <img class="media-object" style="width:60px;height:60px;" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="" />
                                            }
                                        </a>
                                        <div class="media-body">
                                            <span class="text-muted" style="font-size:x-small;">
                                                @@ @comment.User.FullName
                                                <small class="float-right">@comment.Created.ToString("dd/MM/yyyy hh:ss tt")</small>:
                                            </span>
                                        </div>
                                        <span class="message text-primary">@Html.Raw(comment.Comment)</span>
                                    </div>
                                    <hr>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- Add Comment -->
        <div class="">
            <div class="col col-md-6 mt-2">
                <div class="card col shadow">
                    <div class="card-header">
                        <i class="far fa-comment text-secondary"></i>
                        <strong>Add Comment</strong>
                    </div>
                    <div class="card-body">
                        @*Form and Logic for authorized users to add comments*@
                        <form class="form-horizontal form-bordered" asp-action="AddTicketComment" asp-controller="Tickets" method="post">
                            <input type="hidden" asp-for="Id" name="TicketId" />
                            @if (Model.DeveloperUserId == btUser.Id || Model.OwnerUserId == btUser.Id || projectManager?.Id == btUser.Id || User.IsInRole(nameof(Roles.Admin)))
                            {
                                <div class="form-group">
                                    <textarea asp-for="@(new TicketComment().Comment)" rows="4" class="form-control" required placeholder="Add comment ..."></textarea>
                                </div>
                                <button class="btn btn-sm btn-primary mt-2">Submit</button>
                            }
                            else
                            {
                                <div class="form-group">
                                    <textarea disabled asp-for="@(new TicketComment().Comment)" rows="8" class="form-control" required placeholder="Add comment ..."></textarea>
                                </div>
                            }
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- Attachments -->
        <div class="">
            <div class="col mt-4">
                <div class="card col shadow">
                    <div class="card-header">
                        <i class="fas fa-paperclip text-secondary"></i>
                        <strong>Attachments</strong>
                    </div>
                    <div class="card-body" style="overflow-y:auto;max-height:300px;">
                        @if (Model.Attachments.Count == 0)
                        {
                            <p class="text-secondary">&nbsp;No Attachments</p>
                        }
                        <div class="container">
                            <div class="row">
                                @foreach (TicketAttachment item in Model.Attachments)
                                {
                                    <div class="col col-sm-2">
                                        <a asp-action="ShowFile" asp-controller="Tickets" asp-route-Id="@item.Id" target="_blank">
                                            <div class="icon">
                                                <img src="@FileService.GetFileIcon(item.FileName)" style="height:50px;width:50px" data-bs-toggle="tooltip" data-bs-placement="top" title="" data-bs-original-title="@item.FileName" />
                                            </div>
                                        </a>
                                        <div style="font-size:x-small">
                                            <div class="file-name">
                                                <strong>@item.Description</strong>
                                            </div>
                                            <small>Size: @FileService.FormatFileSize(item.FileData.Length) </small>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Add Attachments -->
        <div class="">
            <div class="col col-md-6 mt-2 mb-4">
                <div class="card col shadow">
                    <div class="card-header">
                        <i class="fas fa-paperclip text-secondary"></i>
                        <strong>Add Attachment</strong>
                    </div>
                    <div class="card-body px-2">
                        <div class="row clearfix">
                            <div>
                                <form asp-action="AddTicketAttachment" asp-controller="Tickets" enctype="multipart/form-data" method="post">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    <input type="hidden" asp-for="@Model.Id" name="TicketId">
                                    <div class="media-body ml-3">
                                        <label>
                                            Description
                                            <input asp-for="@Model.Attachments.FirstOrDefault().Description" type="text" class="form-control" />
                                        </label><br />
                                        <label class="btn btn-outline-primary btn-sm mt-2">
                                            <input asp-for="@Model.Attachments.FirstOrDefault().FormFile" type="file" class="form-control-file" />
                                        </label>
                                        <button type="submit" class="btn btn-outline-secondary btn-sm mt-2">Submit</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Ticket Activity-->
    <div class="col-12 col-md-4 mb-4">
        <div class="col">
            <div class="card shadow">
                <div class="card-header">
                    <i class="fas fa-history text-secondary"></i>
                    <strong>Ticket Activity</strong>
                </div>
                <div class="card-body ticket-activity px-2">
                    @if (Model.History.Count == 0)
                    {
                        <p class="text-secondary">&nbsp;No Activity</p>
                    }
                    @*Loop to show the history entries for the Ticket*@
                    @foreach (TicketHistory tH in Model.History.Reverse())
                    {
                        <div class="">
                            <span class="date"><strong>@tH.Created.ToString("dd MMM yyyy")</strong></span>
                            <br>
                            <span>@tH.Description</span>
                            <br>
                            <span>By: <a href="" style="text-decoration: none">@tH.User?.FullName</a></span>
                            <p></p>
                            <div class="">
                                @if (tH.Description.Contains("New Ticket Created"))
                                {
                                    <p>&nbsp;&nbsp;A ticket was added.</p>
                                }
                                else if (tH.Property.Equals("TicketComment") || tH.Property.Equals("TicketAttachment"))
                                {
                                    <p>&nbsp;&nbsp;A <b>@tH.Property</b> was added.</p>
                                }
                                else
                                {
                                    <p>&nbsp;&nbsp;The ticket <b>@tH.Property</b> was edited</p>
                                    <p>&nbsp;&nbsp;&nbsp;&nbsp;@($"Previous {tH.Property}:  ") <span class="text-danger">@tH.OldValue</span></p>
                                    <p>&nbsp;&nbsp;&nbsp;&nbsp;@($"Current {tH.Property}:   ") <span class="text-success">@tH.NewValue</span></p>
                                }

                            </div>
                        </div>
                        <hr />
                    }
                </div>
            </div>
        </div>
    </div>
</div>
